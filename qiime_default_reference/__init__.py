import hashlib
import os.path

__version__ = "0.1.2"

def get_reference_sequences():
    """Return absolute filepath to default reference sequences.

    Current default is Greengenes 13_8 97% OTU representative sequences.

    """
    return _get_reference_data('gg_13_8_otus', 'rep_set', '97_otus.fasta')


def get_reference_taxonomy():
    """Return absolute filepath to default reference taxonomy.

    Current default is Greengenes 13_8 97% OTU representative sequence taxonomic
    assignments.

    """
    return _get_reference_data(
        'gg_13_8_otus', 'taxonomy', '97_otu_taxonomy.txt')

def get_reference_tree():
    """Return absolute filepath to default reference tree.

    Current default is a phylogenetic tree built from Greengenes 13_8 97% OTU
    aligned representative sequences.

    """
    return _get_reference_data('gg_13_8_otus', 'trees', '97_otus.tree')

def get_template_alignment():
    """Return absolute filepath to default template alignment.

    Current default is Greengenes 13_8 85% OTU aligned representative sequences.

    """
    return _get_reference_data(
        'gg_13_8_otus', 'rep_set_aligned', '85_otus.pynast.fasta')


def get_template_alignment_column_mask():
    """Return 16S alignment Lane mask as a string.

    Lane mask is derived from:
        Lane,D.J. (1991) 16S/23S rRNA sequencing. In Stackebrandt,E. and
        Goodfellow,M. (eds), Nucleic Acid Techniques in Bacterial Systematics.
        John Wiley and Sons, New York, pp. 115-175.

    Lane mask was originally available in ARB. For more information on ARB, see:
        http://www.ncbi.nlm.nih.gov/pubmed/14985472

    16S alignment Lane mask taken from:
        http://greengenes.lbl.gov/Download/Sequence_Data/lanemask_in_1s_and_0s

    The trailing newline that is present in the original file has been removed.

    """
    return


# Copied and modified from
# https://github.com/biocore/scikit-bio/blob/master/skbio/util/_misc.py
# See licenses/scikit-bio.txt for more details.
def safe_md5(open_file, block_size=2 ** 20):
    """Computes an md5 sum without loading the file into memory

    Parameters
    ----------
    open_file : file object
        open file handle to the archive to compute the checksum. It
        must be open as a binary file
    block_size : int, optional
        size of the block taken per iteration

    Returns
    -------
    md5 : md5 object from the hashlib module
        object with the loaded file

    Notes
    -----
    This method is based on the answers given in:
    http://stackoverflow.com/a/1131255/379593

    Examples
    --------
    >>> from StringIO import StringIO
    >>> from qiime_default_reference import safe_md5
    >>> fd = StringIO("foo bar baz") # open file like object
    >>> x = safe_md5(fd)
    >>> x.hexdigest()
    'ab07acbb1e496801937adfa772424bf7'
    >>> fd.close()

    """
    md5 = hashlib.md5()
    data = True
    while data:
        data = open_file.read(block_size)
        if data:
            md5.update(data)
    return md5


def _get_reference_data(*args):
    fp = os.path.join(_get_package_dir(), *args)

    if not os.path.exists(fp):
        raise IOError(
            "Reference data file %s is missing from installation." % fp)
    return fp


# Copied and modified from qiime.util.get_qiime_project_dir:
# https://github.com/biocore/qiime/blob/master/qiime/util.py
# The author of the function (Greg Caporaso) gave permission to use his GPL
# code in this project without requiring that this project also become GPL.
def _get_package_dir():
    return os.path.dirname(os.path.abspath(__file__))
